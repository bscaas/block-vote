{"version":3,"sources":["util/general-util.js","contract/BaseContract.js","Home.jsx","About.jsx","DecryptVote.jsx","Elections.jsx","Candidates.jsx","ElectionForm.jsx","CandidateForm.jsx","VoterForm.jsx","ElectionTally.jsx","App.js","util/wallet-util.js","contract/ElectionContract.js","contract/VotingBoothContract.js","contract/ElectionCandidateContract.js","contract/VoterRegistrationContract.js","ElectionBallot.jsx","reportWebVitals.js","contract/ElectionTallyContract.js","index.js"],"names":["GeneralUtil","replace","c","crypto","getRandomValues","Uint8Array","toString","length","charset","x","i","push","parseInt","Math","random","join","BaseContract","config","this","require","Home","className","style","background","src","process","alt","class","React","Component","About","id","DecryptVote","props","messages","location","state","election_id","already_decrypted_messages","JSON","parse","localStorage","getItem","m","includes","window","web3","utils","keccak256","onClick","decrypt","decrypted_messages","decrypted_votes","Promise","all","map","message","resolv","fetch","then","response","text","WalletUtil","decrypted","decrypted_json","vote_id","contract","voting_booth","submitEncryptedMessages","election_tally","submitVoteFragments","console","log","concat","setItem","stringify","withRouter","Elections","editElection","election","history","electionResults","e","stopPropagation","elections","AppUtil","startLoading","list","a","Election","setState","voter","getTurnout","voter_count","stopLoading","background_image","title","xmlns","viewBox","d","name","phase","endCandidate","endRegistration","endVoting","endTally","finally","Candidates","can_register","candidates","editCandidate","ElectionCandidate","candidate","ElectionForm","createElection","uuidv4","create","alert","updateElection","handleChangeName","event","target","value","gotoBallot","gotoDecrypt","getEncryptedMessages","gotoRegistration","Voter","election_candidate","button","voteButton","type","onChange","CandidateForm","createCandidate","key","clashid","updateCandidate","VoterForm","registerVoter","blockchain_address","ethereum","selectedAddress","register","nin","handleChangeNIN","ElectionTally","am4core","am4themes_animated","chart","am4charts","hiddenState","properties","opacity","paddingRight","data","categoryAxis","yAxes","dataFields","category","renderer","grid","template","strokeOpacity","minGridDistance","labels","dx","minWidth","tooltip","valueAxis","xAxes","inside","fillOpacity","min","cursorTooltipEnabled","baseGrid","dy","series","valueX","categoryY","tooltipText","pointerOrientation","columnsContainer","zIndex","columnTemplate","columns","height","maxHeight","column","cornerRadius","heatRules","property","dataField","max","mainContainer","mask","undefined","cursor","lineX","disabled","lineY","behavior","bullet","createChild","circle","radius","valign","align","isMeasured","interactionsEnabled","horizontalCenter","states","adapter","add","parent","pixelRadius","previousBullet","image","width","verticalCenter","propertyFields","href","events","on","dataItem","tooltipDataItem","children","getIndex","isHover","getKey","pixelWidth","router_config","path","component","is_menu","ElectionBallot","App","item","to","exact","createElement","document","getElementById","classList","loaderInterval","clearInterval","remove","loaderImage","loaderAngle","setInterval","transform","sigUtil","ethUtil","r","request","method","params","msg","encryptionPublicKey","bufferToHex","Buffer","from","encrypt","encrypted_msg","ElectionContract","eth","Contract","abi_interface","address","methods","send","gas","readElection","deleteElection","listElections","call","listElectionIds","election_candidate_id","elected_candidate_id","VotingBoothContract","resolve","clearEncryptedMessages","EncryptedMessage","ElectionCandidateContract","candidate_id","readCandidate","deleteCandidate","listCandidates","listCandidateIds","profile_image_hash","profile_image_url","VoterRegistrationContract","voter_registration","reg_num","voted","decryptor1","public_key","decryptor2","decryptors","decryptors2","vote","byteArray","Array","byte","slice","candidate_key","n_decryptors","encrypted_msgs","promises","encryptions_1","pubkey","fragment","candidate_key_fragment","candidate_key_fragment_position","ipfs","results","encryptions_2","decryptor","encryption1_cid","pubkey2","results2","r2","reject","encrypted2_cid","msg2","store_encryptions","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ElectionTallyContract","vote_fragments","getTally","ipfsClient","enable","Web3","loadWeb3","host","port","protocol","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.02baa2ee.chunk.js","sourcesContent":["export default class GeneralUtil {\n    \n    /**\n     * UUID version 4\n     * Implementation from  https://stackoverflow.com/a/2117523/1441011\n     */\n    static uuidv4() { \n        return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\n            (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n        );\n    }\n\n    /**\n     * Built to have sparse collisions\n     * @param {*} length \n     * @param {*} charset \n     */\n    static clashid(length=10, charset=['1','2','3']){\n        let x  = []\n        for(let i=0;i<length;i++)x.push(charset[parseInt(Math.random()*3)])\n        return x.join('')\n    }\n    \n      \n}","export default class BaseContract{\n    config = null;\n    constructor(){\n        this.config = require('../config.json')\n    }\n}","import React from 'react'\nexport default class Home extends React.Component{\n\n    constructor(){\n        super()\n    }\n\n    render(){\n        return(\n            <div>\n\n                <section className=\"h-screen flex items-center justify-center border-b-2 border-green-400\">\n                    <div className=\"absolute opacity-50 h-full w-full\" style={{background: \"no-repeat center top url('\" + process.env.PUBLIC_URL + \"/assets/images/fist.jpg\"}}>\n\n                    </div>\n                    <h2 className=\"uppercase tracking-wide text-3xl text-green-600 font-bold\">Election voting on the blockchain</h2>\n                    <p className=\"mt-1 text-gray-500\">A solution that works!</p>\n                </section>\n\n                <section className=\"h-screen bg-opacity-50 flex items-center justify-center border-b-2 border-green-400\">\n                    <img className=\"rounded-lg md:w-56\" \n                    src={`${process.env.PUBLIC_URL}/assets/images/puzzle.png`} \n                    alt=\"Missing piece\"/>\n                    <h2 class=\"uppercase tracking-wide text-lg text-green-600 font-bold\">The stumbling Block</h2>\n                    <p class=\"mt-1 text-gray-500\">The African electoral systems are plagued with malpractise, violence and general apathy on the part of citizens.Not only that, there is also the issue of huge costs required to fund the process. The concept of democracy has therefore not been able to fulfill its purpose. </p>\n                </section>\n\n                <section className=\"h-screen bg-opacity-50 flex items-center justify-center border-b-2 border-green-400\">\n                    <h2 class=\"uppercase tracking-wide text-lg text-green-600 font-bold\">Our solution</h2>\n                    <p class=\"mt-1 text-gray-500\">A full on-chain voting system using \"Cascade Encrypted Obfuscation\" (CEO) technique that inherits the decentralized and auditable features of the blockchain. Voting would become digital immutable and transparent.</p>\n\n                    <img className=\"rounded-lg md:w-56\" \n                    src={`${process.env.PUBLIC_URL}/assets/images/blockchain.png`} \n                    alt=\"Blockchain\"/>\n                </section>\n                <section className=\"h-screen bg-opacity-50 flex items-center justify-center mb-0\">\n                    <img className=\"rounded-lg md:w-56\" \n                    src={`${process.env.PUBLIC_URL}/assets/images/earn_rewards.png`} \n                    alt=\"logo\"/>\n                    <h2 class=\"uppercase tracking-wide text-lg text-green-600 font-bold\">Earn Rewards</h2>\n                    <p class=\"mt-1 text-gray-500\">Get rewarded for being an active citizen! Earn our Liberty Token (LBT) as you complete the registration cycle and vote for your desired candidate. Participation in government has never been better!</p>\n                </section>\n            </div>\n        )\n    }\n} ","import React from 'react'\nimport './About.css'\n\nexport default class About extends React.Component{\n\n    constructor(){\n        super()\n    }\n\n    render(){\n        return(\n            <div class=\"mt-4 md:mt-0 md:ml-6\">\n                <section id=\"about1\" className=\"h-screen bg-opacity-50 flex items-center justify-center mb-0  bg-auto bg-no-repeat bg-center\" style={{background: \"url('\" + process.env.PUBLIC_URL + \"/assets/images/multiethnic-group-hands-raised.jpg\"}}>\n\n                </section>\n                <div>\n                    <h2 class=\"block mt-1 text-lg leading-tight font-semibold text-gray-900 hover:underline\">BlockVote | Everything You Need To Know!</h2>\n                    <p>\n                    This Application is for election & polling at any scale.\n                    Fortified with encrytion obfusication in order to obscure the voters from thier vote making it nearly imposible to see which candidate a voter voted.</p>\n                    <p>These application has an inbuilt reward system to incentivise the voters. \n                    Electorial processes can be overwhelming most of the time and as sign of good fate its only natural to want to support the people for thier cooperation.</p>\n                    <p>The more processes you complete the more you earn, this way everyone will be willing to participate. Everyone must pre-register to vote prior to election.</p>\n                    <p>Though the infomation on the block chain is public, the identities of the voters cannot be easily figured out.</p>\n                </div>\n                <div>\n                    <p></p>\n                    <h2 class=\"block mt-1 text-lg leading-tight font-semibold text-gray-900 hover:underline\">How To Vote</h2>\n                    <p>Every voter must go to the registration portal and register to vote.</p>\n                </div>\n            </div>\n        )\n    }\n} ","import React from 'react'\nimport WalletUtil from './util/wallet-util'\nimport { withRouter } from 'react-router-dom'\n\n\nexport  class DecryptVote extends React.Component {\n    constructor(props){\n        super(props)\n        this.messages = []\n        if(props.location.state){\n            this.election_id = props.location.state.election_id\n            this.already_decrypted_messages = JSON.parse(localStorage.getItem('decrypt'+this.election_id)) || []\n\n            for(let m of props.location.state.messages){\n                if(!this.already_decrypted_messages.includes(window.web3.utils.keccak256(m).toString())){\n                    this.messages.push(m)\n                }\n                \n            }\n        }\n        \n    }\n\n    componentDidMount(){\n       \n    }\n\n    render(){\n        return(\n            // <div>\n            //     {this.state.messages.map((m)=>{\n            //             return <p>{m.blockchain_address}</p>\n            //         })}        \n            // </div>\n            <div>\n                {this.messages.length} messages to decrypt.\n                <br></br>\n                <button onClick={()=>this.decrypt()}>Decrypt</button>\n            </div>\n        )\n    }\n\n    decrypt(){\n        let decrypted_messages = []\n        let decrypted_votes = []\n        \n        //Decrypt all encrypted messages\n        Promise.all(this.messages.map((message)=>{\n            return new Promise((resolv)=>{\n                fetch(\"https://ipfs.infura.io/ipfs/\"+message).then((response)=>{\n                    response.text().then((text)=>{\n                        WalletUtil.decrypt(text).then((decrypted)=>{\n                            let decrypted_json = JSON.parse(decrypted)\n                            if(decrypted_json.vote_id){\n                                decrypted_votes.push(decrypted_json)\n                            }\n                            else{\n                                decrypted_messages.push(decrypted_json)\n                            }\n                            resolv()\n                        })\n                    })\n                })\n                \n            })\n        })).then(()=>{ //Submit decryptions to relevant contracts\n            Promise.all([\n                window.contract.voting_booth.submitEncryptedMessages(this.election_id, decrypted_messages),\n                window.contract.election_tally.submitVoteFragments(this.election_id, decrypted_votes)\n            ]).then(()=>{\n                console.log(decrypted_messages)\n                this.already_decrypted_messages = this.already_decrypted_messages.concat(this.messages.map((m)=>window.web3.utils.keccak256(m).toString()))\n                localStorage.setItem('decrypt'+this.election_id, JSON.stringify(this.already_decrypted_messages))\n            })\n            \n        })\n\n        \n        \n    }   \n    \n}\n\nexport default withRouter(DecryptVote);\n","import React from 'react'\nimport { withRouter } from 'react-router-dom';\nimport GeneralUtil from './util/general-util';\nimport { Election } from './contract/ElectionContract';\nimport { AppUtil } from './App';\n\nexport  class Elections extends React.Component{\n    \n    constructor(){\n        super()\n        this.elections = []\n        AppUtil.startLoading()\n        window.contract.election.list().then((elections)=>{\n            this.elections = elections.map((a)=>new Election(...a))\n            this.setState({}) //Call setstate to re-render UI\n            for(let e of this.elections){\n                window.contract.voter.getTurnout(e.id).then((c)=>{\n                    e.voter_count = c\n                    this.setState({}) //Call setstate to re-render UI\n\n                })\n            }\n\n            AppUtil.stopLoading()\n        })\n    }\n\n    render(){\n        return(\n            <div className=\"elections\">\n                <h1 className=\"mt-5 text-2xl\">Elections<i className=\"fas fa-plus-circle float-right\" onClick={()=>{this.editElection(new Election('',''))}}></i></h1>\n                {this.elections.map((election)=>{\n                    return(\n                        <div className=\" w-full lg:max-w-full lg:flex\">\n                            <div className=\"h-48 lg:h-auto lg:w-48 flex-none bg-cover border-2 border-green-400 rounded-t lg:rounded-t-none lg:rounded-l text-center overflow-hidden\" style={{background_image: \"url('/mountain.jpg')\"}} title=\"Mountain\">\n                            </div>\n                            <div className=\"w-full border-r border-b border-l border-gray-400 lg:border-l-0 lg:border-t lg:border-gray-400 bg-white rounded-b lg:rounded-b-none lg:rounded-r p-4 flex flex-col justify-between leading-normal\" onClick={()=>{this.editElection(election)}}>\n                                <div className=\"mb-8\">\n                                    <p className=\"text-sm text-gray-600 flex items-center\">\n                                        <svg className=\"fill-current text-gray-500 w-3 h-3 mr-2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\">\n                                        <path d=\"M4 8V6a6 6 0 1 1 12 0v2h1a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2v-8c0-1.1.9-2 2-2h1zm5 6.73V17h2v-2.27a2 2 0 1 0-2 0zM7 6v2h6V6a3 3 0 0 0-6 0z\" />\n                                        </svg>\n                                        Registrants only\n                                    </p>\n                                <div className=\"text-gray-900 font-bold text-xl mb-2\">{election.name}</div>\n                                    <p className=\"text-gray-700 text-base\">{election.voter_count} Registered Voters</p>\n                                </div>\n                                <div className=\"flex items-center\">\n                                    <span className=\"inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-red-100 bg-red-600 rounded-full\">Phase: {election.phase}</span>\n                                    \n                                    {   election.phase == 'Candidate'\n                                        ? <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\" onClick={(e)=>this.endCandidate(election.id, e)}>End Candidate Registration</button>\n                                        : (election.phase == 'Registration'\n                                           ? <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\" onClick={(e)=>this.endRegistration(election.id, e)}>End Voter Registration</button>\n                                           : (election.phase == 'Voting'\n                                              ? <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full right-0\" onClick={(e)=>this.endVoting(election.id, e)}>End Voting</button>\n                                              : (election.phase == 'Tally'\n                                                ? <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\" onClick={(e)=>this.endTally(election.id, e)}>End Tally</button>\n                                                : <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\" onClick={(e)=>this.electionResults(election, e)}>Election Results</button>)\n                                              \n                                              )\n                                        \n                                        )\n                                    \n                                    }\n                                </div>\n                            </div>\n                        </div>\n\n                    )\n                })}\n            </div>\n            \n        )\n    }\n\n    editElection = (election)=>{\n        this.props.history.push('/election-form', {election: election })\n    }\n\n    endCandidate(election_id, e){\n        e.stopPropagation();\n        AppUtil.startLoading()\n        window.contract.election.endCandidate(election_id).finally(()=>{\n            AppUtil.stopLoading()\n        })\n        return false\n    }\n    endRegistration(election_id, e){\n        e.stopPropagation();\n        AppUtil.startLoading()\n        window.contract.election.endRegistration(election_id).finally(()=>{\n            AppUtil.stopLoading()\n        })\n        return false\n    }\n    endVoting(election_id, e){\n        e.stopPropagation();\n        AppUtil.startLoading()\n        window.contract.election.endVoting(election_id).finally(()=>{\n            AppUtil.stopLoading()\n        })\n        return false\n    }\n    endTally(election_id, e){\n        e.stopPropagation();\n        AppUtil.startLoading()\n        window.contract.election.endTally(election_id).finally(()=>{\n            AppUtil.stopLoading()\n        })\n        return false\n    }\n    electionResults = (election, e)=>{\n        e.stopPropagation();\n        this.props.history.push('/election-tally', {election: election })\n        return false\n    }\n} \nexport default withRouter(Elections);","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { ElectionCandidate } from './contract/ElectionCandidateContract'\nimport GeneralUtil from './util/general-util'\nexport class Candidates extends React.Component{\n\n    constructor(props){\n        super()\n        this.election_id = props.election_id\n        this.can_register = props.can_register\n        this.candidates = props.candidates\n    }\n\n    render(){\n        return(\n            <div className=\"candidates\">\n                {this.can_register \n                ? <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\" onClick={()=>{this.editCandidate(new ElectionCandidate('','',this.election_id, '','',''))}}>Create</button>\n                : ''}\n                \n                {this.candidates.map((candidate)=>{\n                    return(\n\n                        <div className=\" w-full lg:max-w-full lg:flex\"  >\n                            <div className=\"h-48 lg:h-auto lg:w-48 flex-none bg-cover border-2 border-green-400 rounded-t lg:rounded-t-none lg:rounded-l text-center overflow-hidden\" style={{background_image: \"url('/mountain.jpg')\"}} title=\"Mountain\">\n                            </div>\n                            <div className=\"w-full border-r border-b border-l border-gray-400 lg:border-l-0 lg:border-t lg:border-gray-400 bg-white rounded-b lg:rounded-b-none lg:rounded-r p-4 flex flex-col justify-between leading-normal\" onClick={()=>{this.editCandidate(candidate)}}>\n                                <div className=\"mb-8\">\n                                    <p className=\"text-sm text-gray-600 flex items-center\">\n                                    </p>\n                                    <div className=\"text-gray-900 font-bold text-xl mb-2\">{candidate.name}</div>\n                                </div>\n                                \n                            </div>\n                        </div>\n                    )\n                })}\n\n\n                \n            </div>\n            \n        )\n    }\n\n    editCandidate(candidate){\n        this.props.history.push('/candidate-form', {candidate: candidate})\n    }\n} \nexport default withRouter(Candidates);\n","import React from 'react'\nimport GeneralUtil from './util/general-util'\nimport { withRouter } from 'react-router-dom'\nimport Candidates from './Candidates'\nimport { Voter } from './contract/VoterRegistrationContract'\nimport { AppUtil } from './App'\nexport class ElectionForm extends React.Component{\n\n    constructor(props){\n        super()\n        this.candidates = []\n        this.election = props.location.state.election;\n\n        if(this.election.id){\n\n            AppUtil.startLoading()\n            window.contract.election_candidate.list(this.election.id).then((candidates)=>{\n                this.candidates.length = 0\n                this.candidates.push(...candidates)\n                this.setState({}) //Call setstate to re-render UI\n            \n                AppUtil.stopLoading()    \n            })\n        }\n    }\n\n    render(){\n\n        let button;\n        \n        if(this.election.id ){\n            button = <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\" onClick={this.updateElection}>Update</button>\n        }\n        else{\n            button = <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\" onClick={this.createElection}>Create</button>\n        }\n\n        let voteButton = '';\n\n        if(this.election.phase == 'Registration'){\n            voteButton = <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\" onClick={this.gotoRegistration}>Register to Vote</button>\n        }\n        else if(this.election.phase == 'Voting')\n        {\n            voteButton = <span className=\"float-right\">\n                            <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\" onClick={this.gotoBallot}>Vote</button>\n                            <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\" onClick={this.gotoDecrypt}>Decrypt</button>\n                        </span>\n        }   \n        \n\n        return(\n            <div className=\"election\">\n                <h3 className=\"text-2xl\">Election</h3> {voteButton}\n                <label>Name: </label>\n                <input type=\"text\" value={this.election.name} onChange={this.handleChangeName}/>\n                {button}                \n                \n                \n                <h3 className=\"text-xl\" >Candidates</h3>\n                { this.election.id\n                    ? <Candidates election_id={this.election.id} can_register={this.election.phase == 'Candidate'} candidates={this.candidates}></Candidates>\n                    : ''\n                }\n            </div>\n            \n        )\n    }\n\n    createElection = ()=>{\n        AppUtil.startLoading()\n        this.election.id = GeneralUtil.uuidv4()\n        window.contract.election.create(this.election).then(()=>{\n            alert(this.election.name + ' has been created with id '+ this.election.id)\n            this.setState({}) //Call setstate to re-render UI\n            AppUtil.stopLoading()\n        }, ()=>{\n\n            AppUtil.stopLoading()\n        })\n        \n    }\n    updateElection = ()=>{\n        alert(this.election.name + ' has been updated')\n    }\n\n    handleChangeName = (event)=>{\n        this.election.name = event.target.value\n        this.setState({}) //Call setstate to re-render UI\n    }\n\n    gotoBallot = ()=>{\n        this.props.history.push('/ballot', {election: this.election, candidates: this.candidates })\n    }\n    gotoDecrypt = ()=>{\n        window.contract.voting_booth.getEncryptedMessages(this.election.id).then((messages)=>{\n            this.props.history.push('/decrypt', {messages: messages, election_id: this.election.id })\n        })\n    }\n\n    gotoRegistration = ()=>{\n        this.props.history.push('/voter-form', {election: this.election, voter: new Voter(0,'','',false) })\n    }\n} \nexport default withRouter(ElectionForm);","import React from 'react'\nimport GeneralUtil from './util/general-util'\nimport { withRouter } from 'react-router-dom'\nimport { AppUtil } from './App';\nexport class CandidateForm extends React.Component{\n\n    constructor(props){\n        super()\n        \n        this.candidate = props.location.state.candidate;\n    }\n\n    render(){\n\n        let button;\n        \n        if(this.candidate.id ){\n            button = <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\" onClick={this.updateCandidate}>Update</button>\n        }\n        else{\n            button = <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\" onClick={this.createCandidate}>Create</button>\n        }\n\n        return(\n            <div className=\"candidate\">\n                <h2 className=\"text-2xl\">Candidate</h2>\n                <label>Name: </label>\n                <input type=\"text\" value={this.candidate.name} onChange={this.handleChangeName}/>\n                {button}                \n\n            </div>\n            \n        )\n    }\n\n    createCandidate = ()=>{\n        this.candidate.id = GeneralUtil.uuidv4()\n        this.candidate.key = GeneralUtil.clashid()\n        window.contract.election_candidate.createCandidate(this.candidate.election_id, this.candidate).then(()=>{\n            this.setState({}) //Call setstate to re-render UI, ()=>{\n\n            AppUtil.stopLoading()\n            \n        }, ()=>{\n\n            AppUtil.stopLoading()\n        })\n        \n    }\n    updateCandidate = ()=>{\n        alert(this.candidate.name + ' has been updated')\n    }\n\n    handleChangeName = (event)=>{\n        this.candidate.name = event.target.value\n        this.setState({}) //Call setstate to re-render UI\n    }\n} \n\nexport default withRouter(CandidateForm);","import React from 'react'\nimport GeneralUtil from './util/general-util'\nimport { withRouter } from 'react-router-dom'\nimport Candidates from './Candidates'\nimport { AppUtil } from './App'\nexport class VoterForm extends React.Component{\n\n    constructor(props){\n        super()\n        this.voter = props.location.state.voter;\n        this.election_id = props.location.state.election.id\n    }\n\n    render(){\n\n        \n\n        return(\n            <div className=\"voter\">\n                <label>National Identity Number: </label>\n                <input type=\"text\" value={this.voter.name} onChange={this.handleChangeNIN}/>\n                <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\" onClick={this.registerVoter}>Register</button>             \n                { this.voter.id\n                    ? <Candidates can_register={this.voter.phase != 'Candidate'} candidates={this.candidates}></Candidates>\n                    : ''\n                }\n            </div>\n            \n        )\n    }\n\n    registerVoter = ()=>{\n        AppUtil.startLoading()\n\n        this.voter.id = 0\n        this.voter.blockchain_address = window.ethereum.selectedAddress\n        window.contract.voter.register(this.election_id, this.voter).then(()=>{\n            alert(this.voter.nin + ' has been registered with id '+ this.voter.id)\n            this.setState({}) //Call setstate to re-render UI\n            AppUtil.stopLoading()\n        }, ()=>{\n\n            AppUtil.stopLoading()\n        })\n        \n    }\n\n    handleChangeNIN = (event)=>{\n        this.voter.nin = event.target.value\n        this.setState({}) //Call setstate to re-render UI\n    }\n\n} \nexport default withRouter(VoterForm);","/* Imports */\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport { withRouter } from 'react-router-dom'\nimport React from 'react'\n\n\nexport class ElectionTally extends React.Component{\n    \n\n    constructor(props){\n        super()\n        this.election = {name: \"Unnamed\"}\n\n        if(props && props.location && props.location.state){\n            this.election = props.location.state.election;\n        }\n            \n    }\n\n    componentDidMount(){\n        /* Chart code */\n            // Themes begin\n            am4core.useTheme(am4themes_animated);\n            // Themes end\n\n            /**\n             * Chart design taken from Samsung health app\n             */\n\n            let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n            chart.hiddenState.properties.opacity = 0; // this creates initial fade-in\n\n            chart.paddingRight = 40;\n\n            chart.data = [{\n                \"name\": \"Chandler\",\n                \"steps\": 11561,\n                \"href\": \"https://www.amcharts.com/wp-content/uploads/2019/04/chandler.jpg\"\n            }, {\n                \"name\": \"Joey\",\n                \"steps\": 15465,\n                \"href\": \"https://www.amcharts.com/wp-content/uploads/2019/04/joey.jpg\"\n            }, {\n                \"name\": \"Ross\",\n                \"steps\": 18788,\n                \"href\": \"https://www.amcharts.com/wp-content/uploads/2019/04/ross.jpg\"\n            }, {\n                \"name\": \"Phoebe\",\n                \"steps\": 25464,\n                \"href\": \"https://www.amcharts.com/wp-content/uploads/2019/04/phoebe.jpg\"\n            }, {\n                \"name\": \"Rachel\",\n                \"steps\": 35781,\n                \"href\": \"https://www.amcharts.com/wp-content/uploads/2019/04/rachel.jpg\"\n            }, {\n                \"name\": \"Monica\",\n                \"steps\": 45688,\n                \"href\": \"https://www.amcharts.com/wp-content/uploads/2019/04/monica.jpg\"\n            }];\n\n            let categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis());\n            categoryAxis.dataFields.category = \"name\";\n            categoryAxis.renderer.grid.template.strokeOpacity = 0;\n            categoryAxis.renderer.minGridDistance = 10;\n            categoryAxis.renderer.labels.template.dx = -40;\n            categoryAxis.renderer.minWidth = 120;\n            categoryAxis.renderer.tooltip.dx = -40;\n\n            let valueAxis = chart.xAxes.push(new am4charts.ValueAxis());\n            valueAxis.renderer.inside = true;\n            valueAxis.renderer.labels.template.fillOpacity = 0.3;\n            valueAxis.renderer.grid.template.strokeOpacity = 0;\n            valueAxis.min = 0;\n            valueAxis.cursorTooltipEnabled = false;\n            valueAxis.renderer.baseGrid.strokeOpacity = 0;\n            valueAxis.renderer.labels.template.dy = 20;\n\n            let series = chart.series.push(new am4charts.ColumnSeries);\n            series.dataFields.valueX = \"steps\";\n            series.dataFields.categoryY = \"name\";\n            series.tooltipText = \"{valueX.value}\";\n            series.tooltip.pointerOrientation = \"vertical\";\n            series.tooltip.dy = - 30;\n            series.columnsContainer.zIndex = 100;\n\n            let columnTemplate = series.columns.template;\n            columnTemplate.height = am4core.percent(50);\n            columnTemplate.maxHeight = 50;\n            columnTemplate.column.cornerRadius(60, 10, 60, 10);\n            columnTemplate.strokeOpacity = 0;\n\n            series.heatRules.push({ target: columnTemplate, property: \"fill\", dataField: \"valueX\", min: am4core.color(\"#e5dc36\"), max: am4core.color(\"#5faa46\") });\n            series.mainContainer.mask = undefined;\n\n            let cursor = new am4charts.XYCursor();\n            chart.cursor = cursor;\n            cursor.lineX.disabled = true;\n            cursor.lineY.disabled = true;\n            cursor.behavior = \"none\";\n\n            let bullet = columnTemplate.createChild(am4charts.CircleBullet);\n            bullet.circle.radius = 30;\n            bullet.valign = \"middle\";\n            bullet.align = \"left\";\n            bullet.isMeasured = true;\n            bullet.interactionsEnabled = false;\n            bullet.horizontalCenter = \"right\";\n            bullet.interactionsEnabled = false;\n\n            let hoverState = bullet.states.create(\"hover\");\n            let outlineCircle = bullet.createChild(am4core.Circle);\n            outlineCircle.adapter.add(\"radius\", function (radius, target) {\n                let circleBullet = target.parent;\n                return circleBullet.circle.pixelRadius + 10;\n            })\n\n            let image = bullet.createChild(am4core.Image);\n            image.width = 60;\n            image.height = 60;\n            image.horizontalCenter = \"middle\";\n            image.verticalCenter = \"middle\";\n            image.propertyFields.href = \"href\";\n\n            image.adapter.add(\"mask\", function (mask, target) {\n                let circleBullet = target.parent;\n                return circleBullet.circle;\n            })\n\n            let previousBullet;\n            chart.cursor.events.on(\"cursorpositionchanged\", function (event) {\n                let dataItem = series.tooltipDataItem;\n\n                if (dataItem.column) {\n                    let bullet = dataItem.column.children.getIndex(1);\n\n                    if (previousBullet && previousBullet != bullet) {\n                        previousBullet.isHover = false;\n                    }\n\n                    if (previousBullet != bullet) {\n\n                        let hs = bullet.states.getKey(\"hover\");\n                        hs.properties.dx = dataItem.column.pixelWidth;\n                        bullet.isHover = true;\n\n                        previousBullet = bullet;\n                    }\n                }\n            })\n    }\n\n\n    render(){\n        return(\n            <div>\n                <h1 className=\"text-2xl\">{this.election.name} Tally Results</h1>\n                <div style={{\"min-height\": '700px'}} id=\"chartdiv\"></div>\n            </div>\n        \n        )\n    }\n}\n\nexport default withRouter(ElectionTally);","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Home from \"./Home\";\nimport About from \"./About\";\nimport ElectionBallot from \"./ElectionBallot\";\nimport DecryptVote from \"./DecryptVote\";\nimport './App.css'\nimport Elections from \"./Elections\";\nimport Candidates from \"./Candidates\";\nimport ElectionForm from \"./ElectionForm\";\nimport CandidateForm from \"./CandidateForm\";\nimport VoterForm from \"./VoterForm\";\nimport ElectionTally from \"./ElectionTally\";\n\n\n/*\nMENU / ROUTER MAPPING\n*/\nconst router_config = [\n  {name: \"Home\", path: \"/\", component: Home, is_menu: true},\n  {name: \"About\", path: \"/about\", component: About, is_menu: true},\n  {name: \"Ballot\", path: \"/ballot\", component: ElectionBallot},\n  {name: \"Decrypt\", path: \"/decrypt\", component: DecryptVote},\n  {name: \"Elections\", path: \"/elections\", component: Elections, is_menu:true},\n  {name: \"Candidates\", path: \"/candidates\", component: Candidates},\n  {name: \"Candidate Form\", path: \"/candidate-form\", component: CandidateForm},\n  {name: \"Election Form\", path: \"/election-form\", component: ElectionForm},\n  {name: \"Register Voter\", path: \"/voter-form\", component: VoterForm},\n  {name: \"Election Tally\", path: \"/election-tally\", component: ElectionTally}\n]\n\n\n/*\n  APPLICATION\n\n*/\nexport default function App() {\n  return (\n    <Router>\n        <nav className=\"sticky top-0 z-40 flex flex-wrap items-center justify-between px-2 bg-blueGray-500 rounded border-2 border-green-200\">\n          <div className=\"w-full relative flex justify-between lg:w-auto px-4 lg:static lg:block lg:justify-start\">\n            <a className=\"text-sm font-bold leading-relaxed inline-block mr-4 py-2 whitespace-nowrap uppercase text-white\" href={process.env.PUBLIC_URL}>\n              <img className=\"rounded-lg md:w-56\" \n                src={`${process.env.PUBLIC_URL}/assets/images/logo.png`} \n                alt=\"logo\"/>\n            </a>\n            <button className=\"cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\" type=\"button\">\n              <span className=\"block relative w-6 h-px rounded-sm bg-white\"></span>\n              <span className=\"block relative w-6 h-px rounded-sm bg-white mt-1\"></span>\n              <span className=\"block relative w-6 h-px rounded-sm bg-white mt-1\"></span>\n            </button>\n          </div>\n          <div className=\"flex lg:flex-grow items-center\">\n            <ul className=\"flex flex-col lg:flex-row list-none ml-auto\">\n              {router_config.map((item, i)=>{\n                  if(item.is_menu){\n                    return(<li className=\"nav-item\">\n                        <Link className=\"px-3 py-2 flex items-center text-xs uppercase font-bold leading-snug hover:opacity-75\" to={item.path}>{item.name}</Link>\n                    </li>)\n                  }\n                  \n              })}\n            </ul>\n            <div className=\"text-center w-12\">\n              <img src={`${process.env.PUBLIC_URL}/assets/images/liberty.png`} />\n              {0} LBT\n            </div>\n          </div>\n        </nav>\n\n\n        \n        <Switch>\n            {router_config.map((item)=>{\n                return (<Route exact path={item.path}>\n                    <div className=\"px-5 pb-0\">\n                      {React.createElement(item.component)}\n                    </div>\n                </Route>)\n            })}\n\n        </Switch>\n        \n    </Router>\n\n  );\n}\n\nexport class AppUtil{\n  static stopLoading(){\n    document.getElementById('loader').classList.add('invisible')\n    if(window.loaderInterval){\n      window.clearInterval(window.loaderInterval);\n      window.loaderInterval = null\n    }\n  }\n\n  static startLoading(){\n    document.getElementById('loader').classList.remove('invisible')\n\n    let loaderImage = document.getElementById('loader-image')\n    let loaderAngle = 0;\n    if(window.loaderInterval){\n      window.clearInterval(window.loaderInterval);\n      window.loaderInterval = null\n    }\n    window.loaderInterval = window.setInterval(()=>{\n        loaderAngle +=5\n        loaderImage.style.transform = \"rotate3d(0,1,0, \"+loaderAngle+\"deg)\"\n    }, 80)\n\n  }\n}","const sigUtil = require('eth-sig-util')\nconst ethUtil = require('ethereumjs-util')\n\n\nexport default class WalletUtil{\n    // constructor(){\n\n    // }\n\n    static getPublicKey(){\n      return new Promise((r)=>{\n        window.ethereum.request({\n          method: 'eth_getEncryptionPublicKey',\n          params: [window.ethereum.selectedAddress], // you must have access to the specified account\n        }).then((x)=>r(x))\n      })\n        \n    }\n\n    static encrypt(msg, encryptionPublicKey){\n      const encryptedMessage = ethUtil.bufferToHex(\n        Buffer.from(\n          JSON.stringify(\n            sigUtil.encrypt(\n              encryptionPublicKey,\n              { data: msg },\n              'x25519-xsalsa20-poly1305'\n            )\n          ),\n          'utf8'\n        )\n      );\n\n      return encryptedMessage;\n    }\n\n    /*\n      TODO: Decrypt multiple messages simultaneously\n    */\n   static decrypt(encrypted_msg){\n      return window.ethereum\n      .request({\n        method: 'eth_decrypt',\n        params: [encrypted_msg, window.ethereum.selectedAddress],\n      })\n    }\n}\n","import BaseContract from './BaseContract'\nexport default class ElectionContract extends BaseContract{\n    constructor(){\n        super()\n        this.contract = new window.web3.eth.Contract(this.config.election.abi_interface, this.config.election.address);\n    }\n\n    create(election){\n        return this.contract.methods.createElection(election).send({from: window.ethereum.selectedAddress, gas: 5000000})\n    }\n\n    read(election_id){\n        return this.contract.methods.readElection(election_id).send({from: window.ethereum.selectedAddress, gas: 5000000})\n    }\n\n    delete(election_id){\n        return this.contract.methods.deleteElection(election_id).send({from: window.ethereum.selectedAddress, gas: 5000000})\n    }\n\n    list(){\n        return this.contract.methods.listElections().call()\n    }\n\n    listIds(){\n        return this.contract.methods.listElectionIds().call()\n    }\n\n    endCandidate(election_id){\n        return this.contract.methods.endCandidate(election_id).send({from: window.ethereum.selectedAddress, gas: 5000000})\n    }\n    endRegistration(election_id){\n        return this.contract.methods.endRegistration(election_id).send({from: window.ethereum.selectedAddress, gas: 5000000})\n\n    }\n    endVoting(election_id){\n        return this.contract.methods.endVoting(election_id).send({from: window.ethereum.selectedAddress, gas: 5000000})\n    }\n\n    endTally(election_id){\n        return this.contract.methods.endTally(election_id).send({from: window.ethereum.selectedAddress, gas: 5000000})\n    }\n}\n\nexport class Election{\n    constructor(id, name, phase=\"Candidate\", election_candidate_id=\"\"){\n        this.id = id\n        this.name = name\n        this.phase = phase\n        this.elected_candidate_id = election_candidate_id\n    }\n}\n","import BaseContract from './BaseContract';\n\nexport class VotingBoothContract extends BaseContract{\n\n    constructor(){\n        super()\n        this.contract = new window.web3.eth.Contract(this.config.voting_booth.abi_interface, this.config.voting_booth.address);\n    }\n\n\n    submitEncryptedMessages(election_id, messages){\n        if(messages.length == 0){\n            return Promise.resolve()\n        }\n        return this.contract.methods.submitEncryptedMessages(election_id, messages ).send({from: window.ethereum.selectedAddress, gas: 5000000});\n    }\n\n    getEncryptedMessages(election_id){\n        return this.contract.methods.getEncryptedMessages(election_id).call({from: window.ethereum.selectedAddress});\n    }\n\n    clearEncryptedMessages(election_id){\n        return this.contract.methods.clearEncryptedMessages(election_id).send({from: window.ethereum.selectedAddress, gas: 1000000})\n    }\n\n\n}\n\nexport class EncryptedMessage{\n    constructor( message, blockchain_address){\n        this.blockchain_address = blockchain_address\n        this.message = message\n    }\n}","import BaseContract from './BaseContract';\n\nexport default class ElectionCandidateContract extends BaseContract{\n    contract = null\n\n    constructor(){\n        super()\n        this.contract = new window.web3.eth.Contract(this.config.election_candidate.abi_interface, this.config.election_candidate.address);\n    }\n\n    createCandidate(election_id, candidate){\n        return this.contract.methods.createCandidate(election_id, candidate ).send({from: window.ethereum.selectedAddress, gas: 1000000});\n    }\n\n\n    updateCandidate(election_id, candidate){\n        return this.contract.methods.updateCandidate(election_id, candidate ).send({from: window.ethereum.selectedAddress, gas: 1000000});\n    }\n\n\n    readCandidate(election_id, candidate_id){\n        return this.contract.methods.readCandidate(election_id, candidate_id ).call();\n    }\n\n\n    deleteCandidate(election_id, candidate_id){\n        return this.contract.methods.deleteCandidate(election_id, candidate_id ).send({from: window.ethereum.selectedAddress, gas: 1000000});\n    }\n\n    list(election_id){\n        return this.contract.methods.listCandidates(election_id).call().then((candidates)=>{\n            return Promise.resolve(candidates.map((c)=>new ElectionCandidate(...c)))\n        });\n    }\n    listIds(election_id){\n        return this.contract.methods.listCandidateIds(election_id).call();\n    }\n\n}\n\nexport class ElectionCandidate{\n\n    constructor( id, name,  election_id, key, profile_image_hash, profile_image_url){\n        this.id = id;\n        this.name = name;\n        this.election_id = election_id;\n        this.key = key;\n        this.profile_image_hash = profile_image_hash;\n        this.profile_image_url = profile_image_url\n    }\n}\n\n\n\n","import BaseContract from './BaseContract';\n\nexport class VoterRegistrationContract extends BaseContract{\n\n    constructor(){\n        super()\n        this.contract = new window.web3.eth.Contract(this.config.voter_registration.abi_interface, this.config.voter_registration.address);\n    }\n\n\n    register(election_id, voter){\n        return this.contract.methods.registerVoter(election_id, voter).send({from: window.ethereum.selectedAddress, gas: 5000000});\n    }\n\n    getTurnout(election_id){\n        return this.contract.methods.getTurnout(election_id).call()\n    }\n\n\n}\n\nexport class Voter{\n    constructor(reg_num, blockchain_address, nin, voted,){\n        this.id = reg_num \n        this.blockchain_address = blockchain_address\n        this.nin = nin\n        this.voted = voted\n    }\n}","import React from 'react'\nimport GeneralUtil from './util/general-util'\nimport WalletUtil from './util/wallet-util'\nimport { EncryptedMessage } from './contract/VotingBoothContract'\nimport { withRouter } from 'react-router-dom'\nimport { AppUtil } from './App'\nconst uint8ArrayFromString = require('uint8arrays/from-string')\n\nexport class ElectionBallot extends React.Component {\n    constructor(props){\n        super(props)\n\n\n        let decryptor1 = {\n            public_key: 'cQzV150MGQ46Z+KR3KCcHE0NwGFoq6uddA955b9GiEo=',\n            blockchain_address: '0xb4875b7EFf02Cc2A9a5697AD4dCE8aDD43e54e90'\n        }\n        let decryptor2 = {\n            public_key: 'cQzV150MGQ46Z+KR3KCcHE0NwGFoq6uddA955b9GiEo=',\n            blockchain_address: '0xb4875b7EFf02Cc2A9a5697AD4dCE8aDD43e54e90'\n        }\n\n        this.state = {\n            candidates: props.location.state.candidates,\n            decryptors:[\n                decryptor1,\n                decryptor2\n                \n                \n            ],\n            decryptors2:[\n                decryptor2,\n                decryptor1\n                \n            ],\n        }\n        this.election = props.location.state.election\n    }\n\n\n    render(){\n        return (\n            \n            <div className=\"ballot\">\n                <h1 className=\"text-2xl\">Ballot</h1>\n                {this.state.candidates.map((candidate)=>{\n                    return <div className=\" w-full lg:max-w-full lg:flex\" >\n                        <div className=\"h-48 lg:h-auto lg:w-48 flex-none bg-cover border-2 border-green-400 rounded-t lg:rounded-t-none lg:rounded-l text-center overflow-hidden\" style={{background_image: \"url('/mountain.jpg')\"}} title=\"Mountain\">\n                        </div>\n                        <div className=\"w-full border-r border-b border-l border-gray-400 lg:border-l-0 lg:border-t lg:border-gray-400 bg-white rounded-b lg:rounded-b-none lg:rounded-r p-4 flex flex-col justify-between leading-normal\" onClick={()=>this.vote(candidate)}>\n                            <div className=\"mb-8\">\n                                <p className=\"text-sm text-gray-600 flex items-center\">\n                                </p>\n                                <div className=\"text-gray-900 font-bold text-xl mb-2\">{candidate.name}</div>\n                            </div>\n                            \n                        </div>\n                    </div>\n                    \n                })}\n            </div>\n        )       \n    }\n\n    toHexString(byteArray) {\n        return Array.from(byteArray, function(byte) {\n            return ('0' + (byte & 0xFF).toString(16)).slice(-2);\n        }).join('')\n    }\n\n    vote(candidate){\n        AppUtil.startLoading()\n        let vote = {\n            id: GeneralUtil.uuidv4(),\n            candidate_key: candidate.key\n        }\n\n        let n_decryptors = this.state.decryptors.length\n        let candidate_key = candidate.key\n\n        let encrypted_msgs = [] //stores the encrypted message instances that will be stored on the blockchain\n        \n        let promises = []\n        \n        let encryptions_1 = []\n        \n        //Explode voter's candidate key for obfuscation of full vote\n        for(let i=0;i<candidate_key.length;i++){\n\n\n            let decryptor = this.state.decryptors[i%n_decryptors];\n            let pubkey = decryptor.public_key\n            let fragment = {\n                vote_id: vote.id,\n                candidate_key_fragment: candidate_key[i],\n                candidate_key_fragment_position: i,\n                election_id: this.election.id\n\n            }\n            \n            encryptions_1.push(WalletUtil.encrypt(JSON.stringify(fragment), Buffer.from(pubkey)))\n\n            \n        }\n\n        let store_encryptions = async ()=>{\n            let results = await window.ipfs.add(encryptions_1)\n            let encryptions_2 = []\n            let i = 0\n            for await (let r of results){\n\n                \n                let decryptor = this.state.decryptors[i%n_decryptors];\n\n                console.log(\"shooting file\")\n\n                \n                let encryption1_cid = r.path\n                let msg = {\n                    blockchain_address: decryptor.blockchain_address,\n                    message: encryption1_cid\n                }\n\n                let decryptor2 = this.state.decryptors2[i%n_decryptors];\n                let pubkey2 = decryptor2.public_key\n                \n                encryptions_2.push(WalletUtil.encrypt(JSON.stringify(msg), pubkey2))\n\n                \n                    \n                \n\n    \n\n                i = i+1\n            }    \n\n            let results2 = await window.ipfs.add(encryptions_2)\n            i=0\n            for await (const r2 of results2){\n                let decryptor2 = this.state.decryptors2[i%n_decryptors];\n\n                promises.push(new Promise(async (resolv, reject)=>{             \n                    let encrypted2_cid =  r2.path\n                    let msg2 = new EncryptedMessage(encrypted2_cid,decryptor2.blockchain_address)\n        \n                    encrypted_msgs.push(msg2)\n                    resolv()    \n                }))\n                i = i+1\n            }\n            \n        }\n\n        store_encryptions().then(()=>{\n\n            console.log(\"Before promises\")\n            Promise.all(promises).then(()=>{\n                window.contract.voting_booth.submitEncryptedMessages(this.election.id, encrypted_msgs).then(()=>{\n                    AppUtil.stopLoading()\n                }, ()=>{\n                    AppUtil.stopLoading()\n                })\n                console.log(\"after promises\")\n                \n            })\n\n        })\n    \n        \n        \n    }\n}\n\nexport default withRouter(ElectionBallot);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import BaseContract from './BaseContract'\nexport default class ElectionTallyContract extends BaseContract{\n    constructor(){\n        super()\n        this.contract = new window.web3.eth.Contract(this.config.election_tally.abi_interface, this.config.election_tally.address);\n    }\n\n    submitVoteFragments(election_id, vote_fragments){\n\n        if(vote_fragments.length == 0){\n            return Promise.resolve()\n        }\n        return this.contract.methods.submitVoteFragments(election_id, vote_fragments).send({from: window.ethereum.selectedAddress, gas: 5000000})\n    }\n\n    getTally(election_id){\n        return this.contract.methods.getTally(election_id).send({from: window.ethereum.selectedAddress, gas: 5000000})\n    }\n}\n\nexport class VoteFragment{\n    constructor(vid, position, fragment){\n        this.election_id=\"\"\n        this.vote_id = vid\n        this.candidate_key_fragment_position = position\n        this.candidate_key_fragment = fragment\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Web3 from 'web3';\nimport {\n  VotingBoothContract, \n  // EncryptedMessage\n} from './contract/VotingBoothContract'\nimport ElectionContract from './contract/ElectionContract';\nimport  ElectionCandidateContract  from './contract/ElectionCandidateContract';\nimport { VoterRegistrationContract } from './contract/VoterRegistrationContract';\nimport ElectionTallyContract from './contract/ElectionTallyContract';\n\nconst config = require('./config.json')\nconst ipfsClient = require('ipfs-http-client');\n\nasync function loadWeb3() {\n  if (window.ethereum) {\n      await window.ethereum.enable();\n      window.web3 = new Web3(window.ethereum);\n    \n  }\n}\n\nloadWeb3().then(()=>{\n  \n\n\n  window.contract = {\n    election: new ElectionContract(),\n    election_candidate: new ElectionCandidateContract(),\n    voting_booth: new VotingBoothContract(),\n    election_tally: new ElectionTallyContract(),\n    voter: new VoterRegistrationContract(),\n  }\n\n\n\n  window.ipfs = ipfsClient({host: config.ipfs.host, port: config.ipfs.port, protocol: config.ipfs.protocol})\n\n  //let y = new ElectionCandidate(\"Tjad\",\"id1\",\"tjkey\",\"MyElection\",\"imagehash\",\"imageurl\")\n\n  //window.contract.election_candidate.createCandidate(\"MyElection\", y);\n\n  \n  // WalletUtil.getPublicKey().then((key)=>{\n  //   alert(key)\n  //   let encrypted_msg = WalletUtil.encrypt(\"Hello world!\", key)\n  //   alert(encrypted_msg);\n\n  //   WalletUtil.decrypt(encrypted_msg).then((x)=>{\n  //     alert(x)\n  //   })\n\n  // })\n\n\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n  \n  \n})\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}